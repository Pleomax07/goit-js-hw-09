{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAChCI,EAAWL,SAASC,cAAc,yBAExC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAEpBM,EAAO,C,SAAEP,EAAUS,MAAAR,MAEpBA,MAIPT,EAAOkB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBAEFd,EAASe,UAAW,EACpB,IAAIC,EAAWC,OAAOpB,EAAMqB,OACxBC,EAAUF,OAAOnB,EAAKoB,OACtBE,EAAYH,OAAOlB,EAAOmB,OAE9BR,YAAW,KACTV,EAASe,UAAW,IACnBC,GAEH,IAAK,IAAIK,EAAW,EAAGA,GAAYD,EAAWC,GAAY,EACxDpB,EAAcoB,EAAUL,GACrBM,MAAK,EAACpB,SAAEA,EAAUS,MAAAY,MACjBC,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBxB,QAAiBqB,OAExCI,QAAQC,IAAI,uBAAqB1B,QAAiBqB,UAEnDM,OAAM,EAAC3B,SAAEA,EAAUS,MAAAmB,MAClBN,EAAAhC,GAASiC,OAAOM,QACd,sBAAoB7B,QAAiB4B,OAEvCH,QAAQC,IAAI,sBAAoB1B,QAAe4B,UAEnDd,GAAYG","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst startBtn = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  startBtn.disabled = true;\n  let delayVal = Number(delay.value);\n  let stepVal = Number(step.value);\n  let amountVal = Number(amount.value);\n\n  setTimeout(() => {\n    startBtn.disabled = false;\n  }, delayVal);\n\n  for (let position = 1; position <= amountVal; position += 1) {\n    createPromise(position, delayVal)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayVal += stepVal;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$startBtn","$47d4ff9957288465$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","disabled","delayVal","Number","value","stepVal","amountVal","position1","then","delay2","$parcel$interopDefault","Notify","success","console","log","catch","delay3","failure"],"version":3,"file":"03-promises.068e2c44.js.map"}